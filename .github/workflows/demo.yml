name: Deploy website
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: install dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hasFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      jobvalue: ${{ steps.publish.outputs.script-file }}  #instead of jobvalue you can give any variable name 
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: install dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hasFiles('**/package-locl.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: publish JS FILE
        id: publish #you can give any unique id value 
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}'>> $GITHUB_OUTPUT ';'  #instead of script-file you can give any variable name 
      # instead we can also define  but the below one may not be accepted in future anymore 
      #run: find dist/assets/*.js -type f -execdir echo '::set-output name=script-file::{}' ';'
      - name: upload artifcats
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: get build artifcats
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: output contents
        run: ls
      - name: output filename 
        run: echo "${{needs.build.outputs.jobvalue}}"
      - name: Deploy
        run: echo "Deploying..."
